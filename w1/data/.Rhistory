install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
install.packages("swirl")
library("swirl")
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
z
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create(testdir)
args(dir.create)
c(getwd(),testdir
)
c(getwd(),"testdir")
dir.create(/Users/inesv/testdir)
dir.create("/Users/inesv/testdir")
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R)")
file.create("mytest.R")
dir()
file.remove("mytest.R)")
dir()
ls()
list.files()
list.files()
?file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$mode
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R" "mytest3.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
info(file.path)
?file.path
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"))
dir.create(file.path(getwd(), "testdir2", "testdir3"))
dir.create(file.path("testdir2", "testdir3", recursive = TRUE))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink("testdir2/", recursive=TRUE)
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
swirl()
library("swirl")
swirl()
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
seq(0, 10, length=30)
seq(5, 10, length=30)
my_seq=seq(5, 10, length=30)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
play()
?seq
back()
nxt(
)
seq(along.with =my_seq)
seq_along(my_seq)
rep(0,times=40)
re0(c(0,1,2), time 10)
re0(c(0,1,2), times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
x<-c(44, NA, 5, NA)
3*x
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
inf-inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo =11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11, 2, NA)
vect2
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
?strptime()
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
setwd("/Users/inesv/Coursera/4-Exploratory/w1/data")
file_url <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
if(!file.exists(filename)) {
# download file
download.file(file_url, "./household_power_consumption.zip", method = "curl")
date_downloaded <- date()
# unziping the files
unzip (filename, exdir = "./", junkpaths = TRUE)
}
# read records for days 1-2/02/2007
library(sqldf)
filter <- "SELECT * from file WHERE Date = '1/2/2007' OR Date = '2/2/2007'"
data <-read.csv.sql(filename, header = TRUE, sep = ";", sql = filter)
close(file_url)
# create DateTime column
data$DateTime <- strptime(paste(data$Date, data$Time), format = "%d/%m/%Y %H:%M:%S")
# create plot
plot_name <- "plot2.png"
png(filename = plot_name, width = 480, height = 480, units = "px", pointsize = 12)
library(ggplot2)
library(scales)
theme_set(theme_bw()) # Change the theme to my preference
qplot(DateTime, Global_active_power, data = data, geom = line) +
labs(ylab = "Global Active Power (kilowatts)") +
scale_x_date(labels = format("%a"))
version
str(data)
qplot(DateTime, Global_active_power, data = data, geom = line) +
labs(ylab = "Global Active Power (kilowatts)") +
scale_x_date(labels = format("%a"))
qplot(DateTime, Global_active_power, data = data, geom = line) +
""
qplot(DateTime, Global_active_power, data = data, geom = line)
?tbl.df
?tbl_df
library(dplyr)
df <- tbl.df(data)
# create plot
plot_name <- "plot2.png"
png(filename = plot_name, width = 480, height = 480, units = "px", pointsize = 12)
library(ggplot2)
library(scales)
theme_set(theme_bw()) # Change the theme to my preference
qplot(DateTime, Global_active_power, data = df, geom = line) +
labs(ylab = "Global Active Power (kilowatts)") +
scale_x_date(labels = format("%a"))
library(dplyr)
df <- tbl_df(data)
# create plot
plot_name <- "plot2.png"
png(filename = plot_name, width = 480, height = 480, units = "px", pointsize = 12)
library(ggplot2)
library(scales)
theme_set(theme_bw()) # Change the theme to my preference
qplot(DateTime, Global_active_power, data = df, geom = line) +
labs(ylab = "Global Active Power (kilowatts)") +
scale_x_date(labels = format("%a"))
?plot
plot(x=df$DateTime, y=df$Global_active_power)
dev.off()
dev.off()
dev.off()
dev.off()
plot(x=df$DateTime, y=df$Global_active_power)
qplot(DateTime, Global_active_power, data = df, geom = line) +
labs(ylab = "Global Active Power (kilowatts)") +
scale_x_date(labels = format("%a"))
?plot
plot(x=df$DateTime, y=df$Global_active_power, type = "l")
, xlab = "", ylab = "Global Active Power (kilowatts)"
plot(x=df$DateTime, y=df$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(x=data$DateTime, y=data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(x=df$DateTime, y=df$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(x=df$DateTime, y=df$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(x=data$DateTime, y=data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/plot2.R')
data$Sub_metering_1
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
ot(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
plot(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
plot(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend(2000,9.5, c(“Health”,”Defense”))
legend(2000,9.5, c("Health","Defense"))
legend(2000,9.5, c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
?legend
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3", pch = 1))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3", pch = 1, col = par(c("black", "red", "blue")))
)
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1, col = par(c("black", "red", "blue"))
)
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1, col = par(c("black", "red", "blue")))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1, col = par("col")
)
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1)
warnings()
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1)
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), pch = 1, lwd = 1)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lwd = 1)
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lwd = 1, col=c(1,2,3))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lwd = 1, col=c(1,2,4))
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lwd = 1, col=c(1,2,4), cex = 0,5)
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"), lwd = 1, col=c(1,2,4), cex = 0.5)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.5)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("right", "top", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend(x="right", y="top", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
legend(x="right", y="top", c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75)
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75)
source('~/Coursera/4-Exploratory/w1/plot2.R')
source('~/Coursera/4-Exploratory/w1/data/plot3.R')
par(mfrow = c(2, 2), mar = c(5, 4, 2, 1))
#(1,1)
plot(x=data$DateTime, y=data$Global_active_power, type = "l", xlab = "",
ylab = "Global Active Power (kilowatts)")
#(1,2)
plot(x=data$DateTime, y=data$Voltage, type = "l", xlab = "datetime",
ylab = "Voltage")
#(2,1)
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75)
#(2,2)
plot(x=data$DateTime, y=data$Global_reactive_power, type = "l", xlab = "datetime",
ylab = "Global_reactive_power")
plot(x=data$DateTime, y=data$Sub_metering_1, type = "l", xlab = "",
ylab = "Energy sub metering")
lines(x=data$DateTime, y=data$Sub_metering_2, type = "l", xlab = "",
col ="red")
lines(x=data$DateTime, y=data$Sub_metering_3, type = "l", xlab = "",
col ="blue")
legend("topright", legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75, y.intersp = 0,75)
legend("topright", legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"),
lwd = 1, col=c(1,2,4), cex = 0.75, y.intersp = 1)
quit
quit()
